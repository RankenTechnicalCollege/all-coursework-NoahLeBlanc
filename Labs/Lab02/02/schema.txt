//----------------------------------- Create Indexes ------------------------

//----------------------- Users Index --------------------------------------
db.users.createIndex(
  { email: 1 },                    // Field to index
  { 
    unique: true                  // Enforce unique emails
  }
);

db.users.createIndex(
  { password: 1 },                 // Field to index
  { unique: true }                 // Enforce unique passwords
);

//----------------------- Bugs Index ---------------------------------------
db.bugs.createIndex(
  { title: 1 },                    // Field to index
  { 
    unique: true,                  // Enforce unique titles
    collation: {
      locale: "en",
      strength: 2
    }
  }
);
db.bugs.createIndex(
  { authorOfBug: 1 }              // Index on bug author
);  
db.bugs.createIndex(
  { "comments.commentAuthor": 1 } // Index on nested comment author
);

db.bugs.createIndex(
  { classificationOfBug: 1 }      // Index on classification
);

db.bugs.createIndex(
  { dateTimeOfCreation: -1 }       // Descending for recent first
);

//---------------------------------- Create Users --------------------------
db.users.insertOne({
  email: "",
  password: "hashedPassword",
  fullName: "",
  givenName: "",
  familyName: "",
  role: "",
  createdBugs: [ ObjectId() ],     // Example placeholder
  assignedBugs: [ ObjectId() ]     // Example placeholder
});

//---------------------------------- Create Bugs ---------------------------
db.bugs.insertOne({
  title: "",
  description: "",
  stepsToReproduce: "",
  authorOfBug: "",
  dateTimeOfCreation: new Date(), 
  classificationOfBug: ObjectId(),
  edits: [
    {
      userId: ObjectId(),   
      dateTime: new Date(), 
      operation: ""         
    }
  ],
  comments: [
    {
      commentAuthor: ObjectId(), 
      dateTime: new Date(),      
      text: ""                   
    }
  ],
  classification: "",   
  testCases: "",        
  workHoursLog: [0]     
});
